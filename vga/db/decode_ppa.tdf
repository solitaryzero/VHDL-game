--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode615w[1..0]	: WIRE;
	w_anode624w[3..0]	: WIRE;
	w_anode641w[3..0]	: WIRE;
	w_anode651w[3..0]	: WIRE;
	w_anode661w[3..0]	: WIRE;
	w_anode671w[3..0]	: WIRE;
	w_anode681w[3..0]	: WIRE;
	w_anode691w[3..0]	: WIRE;
	w_anode701w[3..0]	: WIRE;
	w_anode713w[1..0]	: WIRE;
	w_anode720w[3..0]	: WIRE;
	w_anode731w[3..0]	: WIRE;
	w_anode741w[3..0]	: WIRE;
	w_anode751w[3..0]	: WIRE;
	w_anode761w[3..0]	: WIRE;
	w_anode771w[3..0]	: WIRE;
	w_anode781w[3..0]	: WIRE;
	w_anode791w[3..0]	: WIRE;
	w_data613w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode791w[3..3], w_anode781w[3..3], w_anode771w[3..3], w_anode761w[3..3], w_anode751w[3..3], w_anode741w[3..3], w_anode731w[3..3], w_anode720w[3..3]), ( w_anode701w[3..3], w_anode691w[3..3], w_anode681w[3..3], w_anode671w[3..3], w_anode661w[3..3], w_anode651w[3..3], w_anode641w[3..3], w_anode624w[3..3]));
	w_anode615w[] = ( (w_anode615w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode624w[] = ( (w_anode624w[2..2] & (! w_data613w[2..2])), (w_anode624w[1..1] & (! w_data613w[1..1])), (w_anode624w[0..0] & (! w_data613w[0..0])), w_anode615w[1..1]);
	w_anode641w[] = ( (w_anode641w[2..2] & (! w_data613w[2..2])), (w_anode641w[1..1] & (! w_data613w[1..1])), (w_anode641w[0..0] & w_data613w[0..0]), w_anode615w[1..1]);
	w_anode651w[] = ( (w_anode651w[2..2] & (! w_data613w[2..2])), (w_anode651w[1..1] & w_data613w[1..1]), (w_anode651w[0..0] & (! w_data613w[0..0])), w_anode615w[1..1]);
	w_anode661w[] = ( (w_anode661w[2..2] & (! w_data613w[2..2])), (w_anode661w[1..1] & w_data613w[1..1]), (w_anode661w[0..0] & w_data613w[0..0]), w_anode615w[1..1]);
	w_anode671w[] = ( (w_anode671w[2..2] & w_data613w[2..2]), (w_anode671w[1..1] & (! w_data613w[1..1])), (w_anode671w[0..0] & (! w_data613w[0..0])), w_anode615w[1..1]);
	w_anode681w[] = ( (w_anode681w[2..2] & w_data613w[2..2]), (w_anode681w[1..1] & (! w_data613w[1..1])), (w_anode681w[0..0] & w_data613w[0..0]), w_anode615w[1..1]);
	w_anode691w[] = ( (w_anode691w[2..2] & w_data613w[2..2]), (w_anode691w[1..1] & w_data613w[1..1]), (w_anode691w[0..0] & (! w_data613w[0..0])), w_anode615w[1..1]);
	w_anode701w[] = ( (w_anode701w[2..2] & w_data613w[2..2]), (w_anode701w[1..1] & w_data613w[1..1]), (w_anode701w[0..0] & w_data613w[0..0]), w_anode615w[1..1]);
	w_anode713w[] = ( (w_anode713w[0..0] & data_wire[3..3]), enable_wire);
	w_anode720w[] = ( (w_anode720w[2..2] & (! w_data613w[2..2])), (w_anode720w[1..1] & (! w_data613w[1..1])), (w_anode720w[0..0] & (! w_data613w[0..0])), w_anode713w[1..1]);
	w_anode731w[] = ( (w_anode731w[2..2] & (! w_data613w[2..2])), (w_anode731w[1..1] & (! w_data613w[1..1])), (w_anode731w[0..0] & w_data613w[0..0]), w_anode713w[1..1]);
	w_anode741w[] = ( (w_anode741w[2..2] & (! w_data613w[2..2])), (w_anode741w[1..1] & w_data613w[1..1]), (w_anode741w[0..0] & (! w_data613w[0..0])), w_anode713w[1..1]);
	w_anode751w[] = ( (w_anode751w[2..2] & (! w_data613w[2..2])), (w_anode751w[1..1] & w_data613w[1..1]), (w_anode751w[0..0] & w_data613w[0..0]), w_anode713w[1..1]);
	w_anode761w[] = ( (w_anode761w[2..2] & w_data613w[2..2]), (w_anode761w[1..1] & (! w_data613w[1..1])), (w_anode761w[0..0] & (! w_data613w[0..0])), w_anode713w[1..1]);
	w_anode771w[] = ( (w_anode771w[2..2] & w_data613w[2..2]), (w_anode771w[1..1] & (! w_data613w[1..1])), (w_anode771w[0..0] & w_data613w[0..0]), w_anode713w[1..1]);
	w_anode781w[] = ( (w_anode781w[2..2] & w_data613w[2..2]), (w_anode781w[1..1] & w_data613w[1..1]), (w_anode781w[0..0] & (! w_data613w[0..0])), w_anode713w[1..1]);
	w_anode791w[] = ( (w_anode791w[2..2] & w_data613w[2..2]), (w_anode791w[1..1] & w_data613w[1..1]), (w_anode791w[0..0] & w_data613w[0..0]), w_anode713w[1..1]);
	w_data613w[2..0] = data_wire[2..0];
END;
--VALID FILE
